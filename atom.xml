<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-06-02T16:00:03.049Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>自定义二维码内容格式的构思</title>
    <link href="http://yoursite.com/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%86%85%E5%AE%B9%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%9E%84%E6%80%9D/"/>
    <id>http://yoursite.com/项目实战/自定义二维码内容格式的构思/</id>
    <published>2018-06-02T15:23:52.000Z</published>
    <updated>2018-06-02T16:00:03.049Z</updated>
    
    <content type="html"><![CDATA[<h3 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h3><blockquote>
<p>一个微信小程序，要实现扫码加好友，配合web端实现扫描二维码登录，这两个功能</p>
</blockquote>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><ol>
<li>如何区分二维码是我们系统内部的，而非其他地方的二维码？</li>
<li>区分出二维码是我们内部的之后，如何区分功能模块。是加好友的二维码呢还是web登录的二维码呢？</li>
<li>不同功能模块的所需要的参数不同，比如加好友，我需要对方的id，扫码登录，我需要web的sessionId等其他参数。</li>
<li>参数生成在二维码中，也就可能被解析出来，如何保证安全性呢。</li>
<li>其他客户端如微博，支付宝，相机自带的扫码功能等，扫描我们二维码后是什么反应呢？</li>
</ol>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><ul>
<li>我们肯定是要生成一个字符串作为二维码内容，那么可以用固定一个字符串作为整个开头，扫描之后判断是否是这个字符串开头，脑海里面首先想到的就是类似于磁力链接协议格式，或者迅雷链接格式</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">## magnet:?&#123;参数&#125;</div><div class="line">magnet:?xt=urn:btih:9ab6066d4eb5c236ff690fce1c2a1e78fe569c87</div><div class="line">## thunder://&#123;参数&#125;</div><div class="line">thunder://QUFtYWduZXQ6P3h0PXVybjpidGloOjlhYjYwNjZkNGViNWMyMzZmZjY5MGZjZTFjMmExZTc4ZmU1NjljODdaWg==</div></pre></td></tr></table></figure>
<ul>
<li>那么我们按照这种形式自己定义一个格式</li>
<li>weapp可以是自己项目的名字</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">weapp:?&#123;参数&#125;</div></pre></td></tr></table></figure>
<ul>
<li>接下来就是解决如何区分具体模块还有其他参数的问题，参数部分，首先第一个参数肯定是具体的模块名称，之后加上一个或多个参数，具体根据对应模块来生成。为了解析方便，我们可以使用一个字符来连接每个参数，比如下划线，这样的话我们可以用split函数来获取所有参数作为数组，因为参数本身不存在空参数，而且位置固定，针对不同功能的参数个数也是固定的，所以我们不用写成类似于url那种带参数名的格式。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">weapp:?addfriend_206</div></pre></td></tr></table></figure>
<ul>
<li>比如这个字符串就是表示这是一个加好友的二维码，好友id是206</li>
<li>我们可以这样来解析</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> qrcodeScanResult = <span class="string">"weapp:?addfriend_206"</span>;</div><div class="line"><span class="keyword">if</span>( qrcodeScanResult.indexOf(<span class="string">"weapp:?"</span>) != <span class="number">0</span> )&#123;</div><div class="line">      <span class="keyword">return</span>;</div><div class="line">&#125;</div><div class="line"><span class="keyword">var</span> paramArray = qrcodeScanResult.replace(<span class="string">"weapp:?"</span>,<span class="string">""</span>).split(<span class="string">"_"</span>);</div><div class="line"></div><div class="line"><span class="keyword">var</span> method = paramArray[<span class="number">0</span>];</div><div class="line"><span class="keyword">if</span>( method == <span class="string">"addfriend"</span> )&#123;</div><div class="line">      <span class="keyword">var</span> userId = paramArray[<span class="number">1</span>];</div><div class="line">      <span class="comment">//<span class="doctag">TODO:</span>调用加好友接口</span></div><div class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>( method == <span class="string">"weblogin"</span> )&#123;</div><div class="line">      <span class="comment">//<span class="doctag">TODO:</span>获取对应参数，实现web登录逻辑</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>那么问题来了，如何保证这些参数的安全性呢。最简单的方法就是把参数部分用对称加密算法加密，固定一个密钥。（协议头部分不加密）</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">weapp:?i6e1d4AP7jjJ/NMK5yY+Ng==</div></pre></td></tr></table></figure>
<ul>
<li>那么问题又来了，假如别人没有用我们的小程序来扫描我们的二维码，而是使用了相机或者其他东西来扫描呢？那么理论上来说，我们这个东西会被当作字符串直接显示出来，虽然我们加密了，不会有安全性问题，但是这样对用户不是很友好。如何解决这个问题呢？</li>
<li>经过思考，得出了一个解决办法，那就是不使用字符串来生成二维码内容，而是使用一个url来作为内容，把加密的参数部分以http参数形式包含在这个url中，比如：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">https://coder-shen.github.io/about/?data=i6e1d4AP7jjJ/NMK5yY+Ng==</div></pre></td></tr></table></figure>
<ul>
<li>这样的话就是判断是否 <a href="https://coder-shen.github.io/about/" target="_blank" rel="external">https://coder-shen.github.io/about/</a> 开头(这部分是固定的)。</li>
<li><p>如果是的话获取data的值 –&gt; 解密data -&gt; 解析参数 -&gt; 业务实现</p>
</li>
<li><p>这样做的好处是，如果是非我们App的其他App扫描我们二维码后不会直接显示我们的自定义字符串，而是会打开这个网页，页面内容可以是提示他下载我们的app或者搜索我们的小程序。当然这时候参数data就是无任何意义的，他只会被显示在URL地址栏中，而一般手机是看不到的，假如你不希望让他显示在地址栏，你可以在这个地址里做一个重定向，重定向的目标页面才是提示页。</p>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;业务场景&quot;&gt;&lt;a href=&quot;#业务场景&quot; class=&quot;headerlink&quot; title=&quot;业务场景&quot;&gt;&lt;/a&gt;业务场景&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;一个微信小程序，要实现扫码加好友，配合web端实现扫描二维码登录，这两个功能&lt;/p&gt;
&lt;/bloc
    
    </summary>
    
      <category term="项目实战" scheme="http://yoursite.com/categories/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E6%88%98/"/>
    
    
  </entry>
  
  <entry>
    <title>Window安装msi程序时候出现2502/2503错误。</title>
    <link href="http://yoursite.com/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/windows/Window%E5%AE%89%E8%A3%85msi%E7%A8%8B%E5%BA%8F%E6%97%B6%E5%80%99%E5%87%BA%E7%8E%B02502-2503%E9%94%99%E8%AF%AF/"/>
    <id>http://yoursite.com/操作系统/windows/Window安装msi程序时候出现2502-2503错误/</id>
    <published>2017-09-04T09:22:52.000Z</published>
    <updated>2018-06-02T15:22:14.273Z</updated>
    
    <content type="html"><![CDATA[<p>1.使用管理员方式运行命令行<br>2.输入以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">msiexec /package [msi package path]</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.使用管理员方式运行命令行&lt;br&gt;2.输入以下命令&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td c
    
    </summary>
    
      <category term="操作系统" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="windows" scheme="http://yoursite.com/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/windows/"/>
    
    
  </entry>
  
  <entry>
    <title>SpringMVC使用@RequestBody提交JSON数据时候报HTTP:400/415错误的解决思路。</title>
    <link href="http://yoursite.com/java/%E5%BA%93%E5%92%8C%E6%A1%86%E6%9E%B6/SpringMVC/SpringMVC%E4%BD%BF%E7%94%A8-RequestBody%E6%8F%90%E4%BA%A4JSON%E6%95%B0%E6%8D%AE%E6%97%B6%E5%80%99%E6%8A%A5HTTP-400-415%E9%94%99%E8%AF%AF%E7%9A%84%E8%A7%A3%E5%86%B3%E6%80%9D%E8%B7%AF/"/>
    <id>http://yoursite.com/java/库和框架/SpringMVC/SpringMVC使用-RequestBody提交JSON数据时候报HTTP-400-415错误的解决思路/</id>
    <published>2017-08-31T06:35:18.000Z</published>
    <updated>2018-06-02T15:22:22.903Z</updated>
    
    <content type="html"><![CDATA[<p>1.上传的JSON字段与实体类字段不完全对应</p>
<ul>
<li>解决办法（fastjson）</li>
<li>解决办法（jackson）</li>
</ul>
<p>2.JSON字段中的值与对应实体类字段的值类型不一致，比如：</p>
<ul>
<li>JSON中的ID是数字类型，实体类中的ID是字符类型<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">#Json</div><div class="line">&#123;id:<span class="number">1</span>,name:<span class="string">"jack"</span>&#125;</div><div class="line">#entity</div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">person</span></span>&#123;</div><div class="line">    <span class="keyword">private</span> String id;</div><div class="line">    <span class="keyword">private</span> Stirng name;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<p>3.实体类没有写默认构造函数，此情况FastJson会抛出异常提示，Jackson不会提示任何错误。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;1.上传的JSON字段与实体类字段不完全对应&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;解决办法（fastjson）&lt;/li&gt;
&lt;li&gt;解决办法（jackson）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.JSON字段中的值与对应实体类字段的值类型不一致，比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JSON中
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
      <category term="库和框架" scheme="http://yoursite.com/categories/java/%E5%BA%93%E5%92%8C%E6%A1%86%E6%9E%B6/"/>
    
      <category term="SpringMVC" scheme="http://yoursite.com/categories/java/%E5%BA%93%E5%92%8C%E6%A1%86%E6%9E%B6/SpringMVC/"/>
    
    
  </entry>
  
  <entry>
    <title>linux后台执行一个命令</title>
    <link href="http://yoursite.com/linux/%E5%91%BD%E4%BB%A4/linux%E5%90%8E%E5%8F%B0%E6%89%A7%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/linux/命令/linux后台执行一个命令/</id>
    <published>2017-08-30T05:56:56.000Z</published>
    <updated>2018-06-02T15:22:31.750Z</updated>
    
    <content type="html"><![CDATA[<p>使用nohup命令，格式如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup [commond] &amp;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用nohup命令，格式如下&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
      <category term="命令" scheme="http://yoursite.com/categories/linux/%E5%91%BD%E4%BB%A4/"/>
    
    
  </entry>
  
  <entry>
    <title>FastJson过滤不需要的字段</title>
    <link href="http://yoursite.com/java/%E5%BA%93%E5%92%8C%E6%A1%86%E6%9E%B6/json%E7%9B%B8%E5%85%B3/FastJson%E8%BF%87%E6%BB%A4%E4%B8%8D%E9%9C%80%E8%A6%81%E7%9A%84%E5%AD%97%E6%AE%B5/"/>
    <id>http://yoursite.com/java/库和框架/json相关/FastJson过滤不需要的字段/</id>
    <published>2017-08-28T10:25:40.000Z</published>
    <updated>2018-06-02T15:22:36.681Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>在不需要的属性上方加入注解：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@JSONField</span>(serialize=<span class="keyword">false</span>)</div><div class="line"><span class="keyword">private</span> String name;</div></pre></td></tr></table></figure>
</li>
<li><p>给不需要的属性加上“transient”修饰符，表示不需要序列化</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">transient</span> String name;</div></pre></td></tr></table></figure>
</li>
<li><p>使用FastJson的拦截器</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">PropertyFilter profilter = <span class="keyword">new</span> PropertyFilter()&#123;  </div><div class="line">     <span class="meta">@Override</span>  </div><div class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">apply</span><span class="params">(Object object, String name, Object value)</span> </span>&#123;  </div><div class="line">          <span class="keyword">if</span>(name.equalsIgnoreCase(<span class="string">"last"</span>))&#123;  </div><div class="line">               <span class="comment">//false表示last字段将被排除在外  </span></div><div class="line">               <span class="keyword">return</span> <span class="keyword">false</span>;  </div><div class="line">          &#125;  </div><div class="line">               <span class="keyword">return</span> <span class="keyword">true</span>;  </div><div class="line">     &#125;</div><div class="line">&#125;;  </div><div class="line">json = JSON.toJSONString(user, profilter);  </div><div class="line">System.out.println(json);</div></pre></td></tr></table></figure>
</li>
<li><p>手动拼接或者手动put 😄</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;在不需要的属性上方加入注解：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
      <category term="库和框架" scheme="http://yoursite.com/categories/java/%E5%BA%93%E5%92%8C%E6%A1%86%E6%9E%B6/"/>
    
      <category term="json相关" scheme="http://yoursite.com/categories/java/%E5%BA%93%E5%92%8C%E6%A1%86%E6%9E%B6/json%E7%9B%B8%E5%85%B3/"/>
    
    
  </entry>
  
</feed>
